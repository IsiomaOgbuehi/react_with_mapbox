{"version":3,"sources":["coord.js","navbar.js","addresses.js","App.js","index.js"],"names":["coord","navbar","props","className","data-toggle","data-target","aria-expanded","aria-controls","aria-hidden","id","type","placeholder","onChange","searchText","addressList","address","onClick","handleClick","places","App","state","navData","map","res","setState","latt","coordinates","lat","lngg","lng","loc_name","name","handleOnChange","e","txt","target","value","toLowerCase","filtered","api","filter","data","includes","key","console","log","initial","done","viewport","width","height","latitude","longitude","zoom","setViewPort","bind","this","marginLeft","mapboxApiAccessToken","mapStyle","onViewportChange","onClose","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42f4906f.chunk.js","sourcesContent":["const coord = [\n  {\n    \"id\": 1,\n    \"name\": \"Eric Moore\",\n    \"address\": \"Surulere\",\n    \"coordinates\": [{\"lat\": 6.556665, \"lng\": 3.227095}]\n  },\n  {\n    \"id\": 2,\n      \"name\": \"Bariga Square\",\n    \"address\": \"Bariga\",\n    \"coordinates\": [{\"lat\": 6.5474387, \"lng\": 3.3910227}]\n  },\n  {\n    \"id\": 3,\n      \"name\": \"Bariga Main Extension\",\n    \"address\": \"Bariga Extension\",\n    \"coordinates\": [{\"lat\": 6.6354199, \"lng\": 3.2996456}]\n  },\n  {\n    \"id\": 4,\n      \"name\": \"Printing House\",\n    \"address\": \"Shomolu\",\n    \"coordinates\": [{\"lat\": 6.5383092, \"lng\": 3.3800615}]\n  },\n  {\n    \"id\": 5,\n      \"name\": \"Capital of Lagos\",\n    \"address\": \"Ikeja\",\n    \"coordinates\": [{\"lat\": 6.6541188, \"lng\": 3.3064652}]\n  }\n]\n\nexport default coord;","import React from 'react';\n\nconst navbar = (props) => {\n    return (\n        <div>\n            <button className=\"btn btn-dark btn_more\" data-toggle=\"collapse\" data-target=\"#searchdiv\" aria-expanded=\"false\" aria-controls=\"searchdiv\"><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></button>\n            <div className=\"map_nav\" id=\"searchdiv\">\n\n                <div className=\"search\">\n                    <h4> My Neighborhood</h4>\n                    <br></br>\n                    <input className=\"form-control form-control-md\" type=\"text\" placeholder=\"Search Map\" onChange={props.searchText} />\n                </div>\n\n                {props.addressList}\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default navbar","import React from 'react';\n\nconst address = (props) => {\n\n    return(\n            <div className=\"search_result\" onClick={() => props.handleClick(props.places.id)}>\n                {props.places.address}\n            </div>\n    )\n}\n\nexport default address","import React from 'react';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport coord from './coord.js';\nimport NavBar from './navbar';\nimport Address from './addresses'\n\nclass App extends React.Component{\n    constructor() {\n        super();\n        const initial = coord.map(data => <Address key={data.id} places={data} handleClick={this.handleClick} handleOnChange={this.handleOnChange} />);\n        this.state = {\n            api: [],\n            done: false,\n            viewport: {\n                width: '100vw',\n                height: '100vh',\n                latitude: 6.493036,\n                longitude: 3.288555,\n                zoom: 8\n            },\n            setViewPort: null,\n            navData: initial,\n            latt: null,\n            lngg: null,\n            loc_name: null\n\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n    }\n    componentDidMount(){\n        this.setState(\n            {api : coord,\n             done: true,\n                viewport: {\n                    width: '100vw',\n                    height: '100vh',\n                    marginLeft: '20vw',\n                    latitude: 6.493036,\n                    longitude: 3.288555,\n                    zoom: 8\n                },\n                setViewPort: null\n            },\n        )\n    }\n    handleClick = (id) => {\n\n       //  console.log(id);\n       //  console.log(this.state.navData);\n        this.state.navData.map(res => {\n\n            if(res.props.places.id === id){\n                this.setState({\n\n                    latt: res.props.places.coordinates[0].lat,\n                    lngg: res.props.places.coordinates[0].lng,\n                    loc_name: res.props.places.name\n\n                });\n\n            }\n            return this.state;\n        });\n\n\n    }\n    handleOnChange = (e) => {\n        let txt = e.target.value.toLowerCase();\n        const searched = this.state.api.filter(data => data.address.toLowerCase().includes(txt) ? data : null);\n\n        const filtered = searched.map(data => <Address key={data.id} places={data} handleClick={this.handleClick} handleOnChange={this.handleOnChange} />)\n        this.setState({\n            navData: filtered\n        });\n        console.log(this.state.navData);\n    }\n\n    // const [viewport, setViewPort] = useState({\n    //                                              width: '100vw',\n    //                                              height: '100vh',\n    //                                              latitude: 6.493036,\n    //                                              longitude: 3.288555,\n    //                                              zoom: 8\n    //                                          });\n    // console.log(api);\n    render(){\n        // this.state.navData = this.state.api.map(data => <Address key={data.id} places={data} handleClick={this.handleClick} handleOnChange={this.handleOnChange} />);\n\n    return (\n\n        <div>\n            <NavBar addressList={this.state.navData} searchText={this.handleOnChange} />\n            <ReactMapGL {...this.state.viewport}\n                        mapboxApiAccessToken={\"pk.eyJ1IjoiaXNpb21hIiwiYSI6ImNqemhpcTYwMDBkaWIzZm16dG5ucHdweW0ifQ.fAQlsUYEzVN2st5qft2IKw\"}\n                        mapStyle=\"mapbox://styles/isioma/cjzi11o2t2yjv1cqlraiqesb0\"\n                        onViewportChange={(viewport) => this.setState({viewport})}>\n                {this.state.navData.map(data => (\n                    <Marker key={data.props.places.id} latitude={data.props.places.coordinates[0].lat} longitude={data.props.places.coordinates[0].lng}>\n                        <div className=\"marker\"><i className=\"fa fa-map-marker\"></i></div>\n                    </Marker>\n                ))}\n                {this.state.latt && this.state.lngg ?\n                    (<Popup\n                        latitude={this.state.latt}\n                        longitude={this.state.lngg}\n                        onClose={() => {\n                            this.setState({\n\n                                latt: null,\n                                lngg: null,\n                                loc_name: null\n\n                            });\n                }}>\n                        <div>\n                            <h2>{this.state.loc_name}</h2>\n                        </div>\n                    </Popup>) : null\n                }\n\n            </ReactMapGL>\n        </div>\n    );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}